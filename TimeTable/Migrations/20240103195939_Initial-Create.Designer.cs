// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeTable.DatabaseConnection;

#nullable disable

namespace TimeTable.Migrations
{
    [DbContext(typeof(TimeTableContext))]
    [Migration("20240103195939_Initial-Create")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TimeTable.ClockTimes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Hour")
                        .HasColumnType("int");

                    b.Property<int>("Minutes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("time");
                });

            modelBuilder.Entity("TimeTable.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("_lessons")
                        .HasColumnType("int");

                    b.Property<string>("_participant")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("_subject")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("education");
                });

            modelBuilder.Entity("TimeTable.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("_Class")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("_Education")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("_EducationSemester")
                        .HasColumnType("int");

                    b.Property<int>("_NumberOfLessons")
                        .HasColumnType("int");

                    b.Property<string>("_Teacher")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("_available")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("_firstname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("_lastname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("student");
                });

            modelBuilder.Entity("TimeTable.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("_description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("_designation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("_premises")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("subject");
                });

            modelBuilder.Entity("TimeTable.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("_available")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("_firstname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("_lastname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("_numberOfWorkDays")
                        .HasColumnType("int");

                    b.Property<bool>("_teached")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("_teachedSubject")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("teacher");
                });

            modelBuilder.Entity("TimeTable.Subject", b =>
                {
                    b.HasOne("TimeTable.Student", null)
                        .WithMany("Subjects")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("TimeTable.Student", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
