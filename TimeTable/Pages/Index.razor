@page "/"
@using Microsoft.EntityFrameworkCore;
@using TimeTable.DatabaseConnection;
@inject IDbContextFactory<TimeTableContext> DbFactory

<PageTitle>Index</PageTitle>

<button @onclick="AddTeacherMethod">Add Teacher</button>
@foreach(Teacher t in techers)
{
	@foreach(Subject s in t.TeachedSubject)
	{
				<h1>@s._premises</h1>
	}
}

@foreach (Student s in students)
{
	<h1>@s.Education.AnzLessons</h1>
}

@code{
	List<Subject> sub = new List<Subject>();
	List<Teacher> techers = new List<Teacher>();
	List<Student> students = new List<Student>();
	List<Education> educations = new List<Education>();
	List<ClockTimes> clocktime = new List<ClockTimes>();
	List<Room> rooms = new List<Room>();

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();


		using var context = DbFactory.CreateDbContext();
		context.InitializeDatabase();


		SubjectDatabaseConnection.setSubject("string1", "string2", "string3");
		SubjectDatabaseConnection.setSubject("math", "string2", "string3");
		sub = SubjectDatabaseConnection.getSubject();

		ClockTimeDatabaseConnection.setClockTime(new(13, 0, 0), new(18, 0, 0), DayOfWeek.Monday, "confrence");

		clocktime = ClockTimeDatabaseConnection.getClockTimes();


		techers = TeacherDatabaseConnection.getTeacher();

		TeacherDatabaseConnection.setTeacher("fda", "hdfs", true, sub, true, 4, clocktime);

		techers = TeacherDatabaseConnection.getTeacher();

		EducationDatabaseConnection.setEducation("bminfromatik", sub, 23);
		educations = EducationDatabaseConnection.getEducation();

		Education eductation = educations[1];

		StudentDatabaseConnection.setStudent("aurel", "bieri", true, eductation, techers, 42, 1, "b32");

		students = StudentDatabaseConnection.getStudent();

		RoomDatabaseConnection.setRoom("computerRoom", 25);
		rooms = RoomDatabaseConnection.getRoom();

	}
	private void AddTeacherMethod()
	{
		TeacherDatabaseConnection.setTeacher("fda", "hdfs", true, sub, true, 4, clocktime);
	}

}