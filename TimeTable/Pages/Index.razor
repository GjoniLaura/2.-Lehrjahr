@page "/"
@using Microsoft.EntityFrameworkCore;
@using TimeTable.DatabaseConnection;
@using TimeTable.Modules;
@inject IDbContextFactory<TimeTableContext> DbFactory

<PageTitle>Home</PageTitle>

<div class="container text-center mt-4">
	<h1 class="text-gold">Home</h1>
	<h3 class="text-gold mb-4">Welcome to the golden Timetable</h3>
	<img src="https://us.123rf.com/450wm/snhandini/snhandini2210/snhandini221000105/192628713-welcome-word-hand-lettering-for-posters-and-greeting-cards-design.jpg?ver=6" class="img-fluid" alt="Welcome Image">

	<div class="mt-3">
		<button class="btn btn-primary" @onclick="FillData">Fill in Test Data</button>
	</div>
</div>

<style>
	.text-gold {
		color: #daa520;
		font-family: 'Comic Sans MS', cursive, sans-serif;
	}
	.container {
		max-width: 80%;
	}
	.img-fluid {
		max-width: 80%;
		height: auto;
	}
</style>



@code{
	List<Subject> Subjects = new List<Subject>();
	List<Subject> Subjects2 = new List<Subject>();
	List<Teacher> Teachers = new List<Teacher>();
	List<Student> Students = new List<Student>();
	List<Education> Educations = new List<Education>();
	List<ClockTimes> Clocktimes = new List<ClockTimes>();
	List<ClockTimes> Clocktimes2 = new List<ClockTimes>();
	List<Room> Rooms = new List<Room>();

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();

		using var context = DbFactory.CreateDbContext();
		context.InitializeDatabase();

	}

	private async void FillData()
	{
		RoomDatabaseConnection.setRoom("InformatikZimmer", 20);
		RoomDatabaseConnection.setRoom("ComputerRoom", 15);
		RoomDatabaseConnection.setRoom("NormalRoom", 20);

		ClockTimeDatabaseConnection.setClockTime(new TimeSpan(8, 0, 0), new TimeSpan(12, 0, 0), DayOfWeek.Monday, "Arbeitszeit Vormittag");
		ClockTimeDatabaseConnection.setClockTime(new TimeSpan(13, 0, 0), new TimeSpan(18, 0, 0), DayOfWeek.Friday, "Arbeitszeit Nachmittag");
		ClockTimeDatabaseConnection.setClockTime(new TimeSpan(10, 0, 0), new TimeSpan(15, 0, 0), DayOfWeek.Wednesday, "Zweite Hälfte Morgens");

		SubjectDatabaseConnection.setSubject("Math", "Learning Math", "Allrooms");
		SubjectDatabaseConnection.setSubject("German", "Learning German", "Allrooms");
		SubjectDatabaseConnection.setSubject("English", "Learning English", "Allrooms");
		SubjectDatabaseConnection.setSubject("Modul M106", "Learning Sql Database Programing", "Informatik");
		SubjectDatabaseConnection.setSubject("Ipt 5.1", "Practise OOP", "Informatik");

		Subjects = SubjectDatabaseConnection.getSubject();
		Subjects2.Add(Subjects[0]);
		Subjects2.Add(Subjects[2]);


		EducationDatabaseConnection.setEducation("Informatiker with BM", Subjects, 30);
		EducationDatabaseConnection.setEducation("Informatiker", Subjects2, 30);

		Educations = await EducationDatabaseConnection.getEducation();

		StudentDatabaseConnection.setStudent("Aurel", "Bieri", true, Educations[0], Teachers, Educations[0].AnzLessons, 1, "Default");
		StudentDatabaseConnection.setStudent("Ana", "Nikolic", true, Educations[0], Teachers, Educations[0].AnzLessons, 1, "Default");
		StudentDatabaseConnection.setStudent("Larissa", "Fahrni", true, Educations[1], Teachers, Educations[1].AnzLessons, 1, "Default");
		StudentDatabaseConnection.setStudent("Laura", "Gjoni", true, Educations[1], Teachers, Educations[1].AnzLessons, 1, "Default");

		Clocktimes = ClockTimeDatabaseConnection.getClockTimes();
		Clocktimes2.Add(Clocktimes[1]);

		TeacherDatabaseConnection.setTeacher("Tom", "Bucher", true, Subjects2, true, 5, Clocktimes);
		TeacherDatabaseConnection.setTeacher("Paul", "Test", true, Subjects, true, 5, Clocktimes);
		TeacherDatabaseConnection.setTeacher("Peter", "Bucher", true, Subjects2, true, 5, Clocktimes2);
	}
}

